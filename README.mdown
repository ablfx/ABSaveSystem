ABSaveSystem is a helper class written in Objective-C which can be used in iOS and Mac OSX Applications
to save data. (Also works perfectly with the iOS/Mac game engine "cocos2D"

___

FEATURES:
===
- Helper Methods for quickly saving strings (NSString), integers (int), floats (float) and booleans (BOOL)

- Save NSData

- Saved Data is encrypted (With Public Apple frameworks->iTunes Connect safe)

- Save/Load to/from multiple files


- Saves the data into a clean .absave binary file

- Mac / iOS / Cocos2D compatible

- Extremely easy to use

___

USAGE:
===

1. Add File from "ABSaveSystem" folder to your project and import ABSaveSystem.h into your class, in the ASaveSystem.m file at the top change "AppName" to whatever your App is named and "OS" to either IOS or MAC.

2. Init ABSaveSystem <br>
    <code>ABSaveSystem *saveSystem = [ABSaveSystem saveSystem];</code>

3. 1. You can basically convert any object that conforms to the NSCoding protocol to an NSData Object and safe that with the SaveSystem (See the Example App for using a Custom NSObject subclass exmaple)<br/>
	<code>
	NSArray *myArray = [NSArray arrayWithObjects:@"Object1", @"Object2", nil];<br/>
    NSData *arrayData = [NSKeyedArchiver archivedDataWithRootObject:myArray];<br/>
    [saveSystem saveData:arrayData withKey:@"myarray"];
	</code>
	<br/><br/>
	2. Load NSData objects:<br/>
	<code>
	NSData *loadedData = [saveSystem loadDataForKey:@"myarray"];<br/>
    NSArray *loadedArray = [NSKeyedUnarchiver unarchiveObjectWithData:loadedData];<br/>
	</code>
	<br/>


4. There are also Helper Methods that let you very quickly save strings/ int's / floats's / BOOL's<br>
<code>
    [mySaveSystem saveString:@"string Value" withKey:@"stringKey"];<br>
    [mySaveSystem saveINT:4563 withKey:@"intKey"];<br>
    [mySaveSystem saveFloat:5.674f withKey:@"floatKey"];<br>
    [mySaveSystem saveBool:YES withKey:@"boolKey"];<br></code>

5. Load strings/ int's / floats's<br>
<code>
    NSLog(@"loaded String: %@", [mySaveSystem loadStringForKey:@"stringKey"]);<br>
    NSLog(@"loaded INT: %i", [mySaveSystem loadINTForKey:@"intKey"]);<br>
    NSLog(@"loaded Float: %f", [mySaveSystem loadFloatForKey:@"floatKey"]);<br></code>

6. Load data directly into variables<br>
<code>
    NSString *myString = [mySaveSystem loadStringForKey:@"stringKey"]<br>
    int myINT = [mySaveSystem loadINTForKey:@"intKey"]<br>
    float myINT = [mySaveSystem loadFloatForKey:@"floatKey"]<br></code>

6. Dont forget to release the Save System after use!<br>
    <code>[mySaveSystem release];<br></code>
  
<br>
<strong>Other Features</strong><br>
- Use following method to save / load to/ from a different file(.plist):<br>
<code>
ABSaveSystem *ss = [ABSaveSystem saveSystem];<br>
ss.superFileName = @"MyPlistName";<br>
//Do saving / Loading
</code>
<p>
- If you need to set the OS (mac/iOS) dynamically in code use the "superOS" property of the ABSaveSystem instance to either "ssIOS" or "ssMAC" (useful for projects with seperate MAC/iOS Targets)
<p>
- There is also a convience method to save/load NSData to different .plist's:<br>
<code>
[saveSystem saveData:myData withKey:@"myKey" fileName:@"MyPlistName"];
</code>


Check out the Example app for iOS and Mac for a usage example!
---
<br> 
___



Some Other Stuff
===
If you like this consider supporting me by buying my game "Be The Kiwi" for iPhone/iPad:<br>
[Be The Kiwi for iOS](http://itunes.apple.com/us/app/be-the-kiwi/id430552007?mt=8)
<br>

or

Downloading "Be The Kiwi" for Mac OS for free and leaving a kind review ;)<br>
[Be The Kiwi for Mac](http://itunes.apple.com/us/app/be-the-kiwi/id446102536?mt=12)
<br>

CONTACT:
-------
Feel free to contact me about any improvement requests / issues via mail<br>
(contact@ablfx.com) or via Twitter (http://www.twitter.com/blunckalex)<br>    
    
LICENSE:
-------
ABSaveSystem is licensed under the MIT Licenseâ€¦or in simple use as you please, just don't sell the code itself ;)

Copyright (c) 2012 Ablfx (Alexander Blunck)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


